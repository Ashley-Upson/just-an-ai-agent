@{
    ViewData["Title"] = "Home page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 20px;
        background-color: #f5f5f5;
    }
    #chat-container {
        max-width: 1400px;
        margin: 0 auto;
        background: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        height: 85vh;
        display: flex;
        flex-direction: column;
    }
    #chat-display {
        flex: 1;
        overflow-y: auto;
        margin-bottom: 20px;
        white-space: pre-wrap;
    }
    #input-container {
        display: flex;
        gap: 10px;
    }
    #message-input {
        flex: 1;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 16px;
    }
    #send-button {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }
    #send-button:hover {
        background-color: #0056b3;
    }
</style>

<h1>Crap GPT</h1>
<div id="chat-container">
    <div id="chat-display"></div>
    <div id="input-container">
        <input type="text" id="message-input" placeholder="Type your message..." />
        <button id="send-button" onclick="sendMessage()">Send</button>
    </div>
</div>

<script>
    const chatDisplay = document.getElementById('chat-display');
    const messageInput = document.getElementById('message-input');

    // Handle Enter key press
    messageInput.addEventListener('keydown', (event) => {
        if (event.key === 'Enter') {
            sendMessage();
        }
    });

    async function sendMessage() {
        const message = messageInput.value.trim();
        if (!message) return;

        // Display user message
        chatDisplay.textContent += `You: ${message}\n`;
        messageInput.value = '';
        chatDisplay.scrollTop = chatDisplay.scrollHeight;

        // Send request to Ollama API
        try {
            const response = await fetch('api/chat', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(message)
            });

            if (!response.ok) 
                throw new Error('Network response was not ok');

            const reply = '\n' + await response.text();

            // Display AI response
            chatDisplay.textContent += `AI: ${reply}\n\n`;
            chatDisplay.scrollTop = chatDisplay.scrollHeight;
        } catch (error) {
            chatDisplay.textContent += `Error: Could not reach AI server. Is it running?\n\n`;
            console.error('Error:', error);
        }
    }
</script>